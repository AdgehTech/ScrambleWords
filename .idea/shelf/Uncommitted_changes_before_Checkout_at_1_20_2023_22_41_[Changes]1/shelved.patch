Index: src/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// it is not working on my divice.\r\n// import com.formdev.flatlaf.FlatLightLaf;\r\nimport frames.Home;\r\n \r\n\r\npublic class App {\r\n    public static void main(String[] args) {\r\n        try {\r\n            // UIManager.setLookAndFeel(new FlatLightLaf());\r\n        } catch( Exception ex ) {\r\n            System.err.println( \"Failed to initialize LaF\" );\r\n        }\r\n        new Home();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.java b/src/App.java
--- a/src/App.java	
+++ b/src/App.java	
@@ -1,12 +1,13 @@
-// it is not working on my divice.
-// import com.formdev.flatlaf.FlatLightLaf;
+import com.formdev.flatlaf.FlatLightLaf;
 import frames.Home;
- 
+
+import javax.swing.*;
 
+
 public class App {
     public static void main(String[] args) {
         try {
-            // UIManager.setLookAndFeel(new FlatLightLaf());
+             UIManager.setLookAndFeel(new FlatLightLaf());
         } catch( Exception ex ) {
             System.err.println( "Failed to initialize LaF" );
         }
Index: src/frames/DifficultySelection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package frames;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class DifficultySelection extends JFrame implements ActionListener {\r\n\r\n    private JComboBox<String> difficultyComboBox;\r\n    private JButton continueButton, backButton;\r\n    private JLabel level1JLabel, level2JLabel, level3JLabel, level4JLabel, level5JLabel, level6JLabel, level7JLabel,\r\n            level8JLabel, level9JLabel, level10JLabel;\r\n\r\n    private JLabel username, levelLabels[] = new JLabel[10];\r\n    private JPanel headerPanel, levelPanel, actionButtonPanel, levelSelectionPanel;\r\n    private String user;\r\n\r\n    public DifficultySelection(String user) {\r\n        this.user = user;\r\n\r\n        setTitle(\"Guess the Scrambled Word\");\r\n        setLayout(new BorderLayout());\r\n\r\n        ImageIcon image = new ImageIcon(\"asset/logo.png\");\r\n        setIconImage(image.getImage());\r\n\r\n        headerPanel = new JPanel();\r\n        headerPanel.setLayout(new BorderLayout());\r\n        headerPanel.setBackground(Color.LIGHT_GRAY);\r\n\r\n        username = new JLabel(user);\r\n        username.setFont(new Font(\"Arial\", Font.PLAIN, 20));\r\n        username.setHorizontalAlignment(JLabel.RIGHT);\r\n        headerPanel.add(username, BorderLayout.WEST);\r\n\r\n        levelSelectionPanel = new JPanel();\r\n        levelSelectionPanel.setLayout(new GridBagLayout());\r\n\r\n        // These are difficulties of the game.\r\n        difficultyComboBox = new JComboBox<String>();\r\n        difficultyComboBox.addItem(\"Easy\");\r\n        difficultyComboBox.addItem(\"Moderate\");\r\n        difficultyComboBox.addItem(\"Hard\");\r\n        difficultyComboBox.addItem(\"Extreme\");\r\n        difficultyComboBox.addItem(\"Fantastic\");\r\n        difficultyComboBox.setPreferredSize(new Dimension(400, 30));\r\n        GridBagConstraints difficultyComboBoxConstraint = new GridBagConstraints();\r\n        difficultyComboBoxConstraint.gridx = 0;\r\n        difficultyComboBoxConstraint.gridy = 0;\r\n        difficultyComboBoxConstraint.insets = new Insets(0, 0, 10, 0);\r\n\r\n        levelPanel = new JPanel();\r\n        levelPanel.setLayout(new FlowLayout());\r\n        levelPanel.setBackground(new Color(150, 140, 140));\r\n        levelPanel.setPreferredSize(new Dimension(400, 100));\r\n        GridBagConstraints levelConstraint = new GridBagConstraints();\r\n        levelConstraint.gridx = 0;\r\n        levelConstraint.gridy = 1;\r\n\r\n        level1JLabel = new JLabel(\"1\");\r\n        level2JLabel = new JLabel(\"2\");\r\n        level3JLabel = new JLabel(\"3\");\r\n        level4JLabel = new JLabel(\"4\");\r\n        level5JLabel = new JLabel(\"5\");\r\n        level6JLabel = new JLabel(\"6\");\r\n        level7JLabel = new JLabel(\"7\");\r\n        level8JLabel = new JLabel(\"8\");\r\n        level9JLabel = new JLabel(\"9\");\r\n        level10JLabel = new JLabel(user);\r\n\r\n        levelLabels[0] = level1JLabel;\r\n        levelLabels[1] = level2JLabel;\r\n        levelLabels[2] = level3JLabel;\r\n        levelLabels[3] = level4JLabel;\r\n        levelLabels[4] = level5JLabel;\r\n        levelLabels[5] = level6JLabel;\r\n        levelLabels[6] = level7JLabel;\r\n        levelLabels[7] = level8JLabel;\r\n        levelLabels[8] = level9JLabel;\r\n        levelLabels[9] = level10JLabel;\r\n\r\n        for (JLabel label : levelLabels) {\r\n            label.setBackground(Color.pink);\r\n            label.setForeground(Color.white);\r\n            label.setFont(new Font(\"Dialog\", Font.BOLD, 20));\r\n            label.setPreferredSize(new Dimension(30, 30));\r\n        }\r\n\r\n        levelPanel.add(level1JLabel);\r\n        levelPanel.add(level2JLabel);\r\n        levelPanel.add(level3JLabel);\r\n        levelPanel.add(level4JLabel);\r\n        levelPanel.add(level5JLabel);\r\n        levelPanel.add(level6JLabel);\r\n        levelPanel.add(level7JLabel);\r\n        levelPanel.add(level8JLabel);\r\n        levelPanel.add(level9JLabel);\r\n        levelPanel.add(level10JLabel);\r\n\r\n        levelSelectionPanel.add(difficultyComboBox, difficultyComboBoxConstraint);\r\n        levelSelectionPanel.add(levelPanel, levelConstraint);\r\n\r\n        actionButtonPanel = new JPanel();\r\n        actionButtonPanel.setBorder(new EmptyBorder(0, 0, 25, 0));\r\n\r\n        backButton = new JButton(\"BACK\");\r\n        backButton.setPreferredSize(new Dimension(200, 50));\r\n        backButton.setBackground(new Color(60, 20, 20));\r\n        backButton.setForeground(Color.WHITE);\r\n        backButton.setFocusable(false);\r\n        backButton.setBorder(null);\r\n        backButton.setFont(new Font(\"Arial\", Font.PLAIN, 20));\r\n        backButton.addActionListener(this);\r\n\r\n        continueButton = new JButton(\"PLAY\");\r\n        continueButton.setPreferredSize(new Dimension(200, 50));\r\n        continueButton.setBackground(new Color(20, 60, 20));\r\n        continueButton.setFont(new Font(\"Arial\", Font.PLAIN, 20));\r\n        continueButton.setForeground(Color.WHITE);\r\n        continueButton.setFocusable(false);\r\n        continueButton.setBorder(null);\r\n        continueButton.addActionListener(this);\r\n\r\n        actionButtonPanel.add(backButton);\r\n        actionButtonPanel.add(continueButton);\r\n\r\n        add(headerPanel, BorderLayout.NORTH);\r\n        add(levelSelectionPanel, BorderLayout.CENTER);\r\n        add(actionButtonPanel, BorderLayout.SOUTH);\r\n\r\n        setSize(1000, 600);\r\n        setLocationRelativeTo(null);\r\n        setResizable(false);\r\n        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\r\n        setVisible(true);\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        if (e.getActionCommand().equals(\"BACK\")) {\r\n            this.dispose();\r\n            new Home();\r\n        }\r\n\r\n        if (e.getActionCommand().equals(\"PLAY\")) {\r\n            int level = 1;\r\n            if(difficultyComboBox.getSelectedItem().equals(\"Moderate\")){ \r\n                level = 2;\r\n            }else if(difficultyComboBox.getSelectedItem().equals(\"Hard\")){ \r\n                level = 3;\r\n            }else if(difficultyComboBox.getSelectedItem().equals(\"Extreme\")){ \r\n                level = 4;\r\n            }else if(difficultyComboBox.getSelectedItem().equals(\"Fantastic\")){ \r\n                level = 5;\r\n            } \r\n            this.dispose();\r\n            new Game(user, level); \r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/frames/DifficultySelection.java b/src/frames/DifficultySelection.java
--- a/src/frames/DifficultySelection.java	
+++ b/src/frames/DifficultySelection.java	
@@ -6,6 +6,7 @@
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 
+
 public class DifficultySelection extends JFrame implements ActionListener {
 
     private JComboBox<String> difficultyComboBox;
Index: src/frames/Home.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package frames;\r\n\r\nimport javax.swing.*; \r\n\r\nimport repository.AccountRepository;\r\nimport models.Account;\r\n\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.util.ArrayList;\r\n\r\npublic class Home extends JFrame implements ActionListener {\r\n\r\n    private JLabel banner;\r\n    private JComboBox<String> usernameComboBox;\r\n    private JButton continueButton;\r\n    private ArrayList<String> usersList;\r\n    private AccountRepository accountRepository;\r\n\r\n    public Home() {\r\n        accountRepository = new AccountRepository();\r\n\r\n        setTitle(\"Guess the Scrambled Word\");\r\n        setLayout(new GridBagLayout());\r\n\r\n        ImageIcon image = new ImageIcon(\"asset/logo.png\");\r\n        setIconImage(image.getImage());\r\n\r\n        banner = new JLabel(\"Guess the Scrambled Word\");\r\n        banner.setFont(new Font(\"Ariel\", Font.BOLD, 40));\r\n        GridBagConstraints bannerConstraint = new GridBagConstraints();\r\n        bannerConstraint.gridx = 0;\r\n        bannerConstraint.gridy = 0;\r\n        bannerConstraint.insets = new Insets(0, 0, 50, 0);\r\n\r\n        usersList = accountRepository.getUsername();\r\n        usernameComboBox = new JComboBox<String>();\r\n        usernameComboBox.setEditable(true);\r\n\r\n        if (!(usersList.isEmpty() == true))\r\n            for (String singleUser : usersList) {\r\n                usernameComboBox.addItem(singleUser);\r\n            }\r\n\r\n        usernameComboBox.setPreferredSize(new Dimension(400, 40));\r\n        usernameComboBox.setFont(new Font(\"Arial\", Font.PLAIN, 20));\r\n        GridBagConstraints usernameConstraint = new GridBagConstraints();\r\n        usernameConstraint.gridx = 0;\r\n        usernameConstraint.gridy = 2;\r\n        usernameConstraint.insets = new Insets(0, 0, 10, 0);\r\n\r\n        continueButton = new JButton(\"Continue\");\r\n        continueButton.setFocusable(false);\r\n        continueButton.setPreferredSize(new Dimension(400, 40));\r\n        continueButton.setFont(new Font(\"Arial\", Font.PLAIN, 20));\r\n        continueButton.addActionListener(this);\r\n        GridBagConstraints continueConstraint = new GridBagConstraints();\r\n        continueConstraint.gridx = 0;\r\n        continueConstraint.gridy = 3;\r\n\r\n        add(banner, bannerConstraint);\r\n        add(usernameComboBox, usernameConstraint);\r\n        add(continueButton, continueConstraint);\r\n\r\n        setSize(1000, 600);\r\n        setLocationRelativeTo(null);\r\n        setResizable(false);\r\n        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\r\n        setVisible(true);\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n\r\n        if (e.getActionCommand().equals(\"Continue\")) {\r\n            String username = (String) usernameComboBox.getSelectedItem();\r\n            if (usersList.contains(username)) { // here some error \r\n                this.dispose();\r\n                new DifficultySelection(username);\r\n            } else if(!usernameComboBox.getActionCommand().isEmpty()) {\r\n                username = (String) usernameComboBox.getEditor().getItem(); \r\n                Account account = new Account();\r\n                account.setUsername(username);\r\n                accountRepository.save(account);\r\n                this.dispose();\r\n                new DifficultySelection(username);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/frames/Home.java b/src/frames/Home.java
--- a/src/frames/Home.java	
+++ b/src/frames/Home.java	
@@ -1,6 +1,6 @@
 package frames;
 
-import javax.swing.*; 
+import javax.swing.*;
 
 import repository.AccountRepository;
 import models.Account;
@@ -28,6 +28,7 @@
 
         banner = new JLabel("Guess the Scrambled Word");
         banner.setFont(new Font("Ariel", Font.BOLD, 40));
+        banner.setForeground(new Color(44, 62, 80));
         GridBagConstraints bannerConstraint = new GridBagConstraints();
         bannerConstraint.gridx = 0;
         bannerConstraint.gridy = 0;
@@ -36,14 +37,14 @@
         usersList = accountRepository.getUsername();
         usernameComboBox = new JComboBox<String>();
         usernameComboBox.setEditable(true);
-
-        if (!(usersList.isEmpty() == true))
-            for (String singleUser : usersList) {
-                usernameComboBox.addItem(singleUser);
-            }
+        
+        for (String singleUser : usersList) {
+            usernameComboBox.addItem(singleUser);
+        }
 
         usernameComboBox.setPreferredSize(new Dimension(400, 40));
         usernameComboBox.setFont(new Font("Arial", Font.PLAIN, 20));
+        usernameComboBox.setSelectedIndex(-1);
         GridBagConstraints usernameConstraint = new GridBagConstraints();
         usernameConstraint.gridx = 0;
         usernameConstraint.gridy = 2;
@@ -54,6 +55,8 @@
         continueButton.setPreferredSize(new Dimension(400, 40));
         continueButton.setFont(new Font("Arial", Font.PLAIN, 20));
         continueButton.addActionListener(this);
+        continueButton.setBackground(new Color(52, 152, 219));
+        continueButton.setForeground(new Color(236, 240, 241));
         GridBagConstraints continueConstraint = new GridBagConstraints();
         continueConstraint.gridx = 0;
         continueConstraint.gridy = 3;
@@ -74,11 +77,13 @@
 
         if (e.getActionCommand().equals("Continue")) {
             String username = (String) usernameComboBox.getSelectedItem();
-            if (usersList.contains(username)) { // here some error 
+            System.out.println(username);
+            if (usernameComboBox.getSelectedItem() == null) {
+                JOptionPane.showMessageDialog(this, "You must enter a username to play the game");
+            } else if (usersList.contains(username)) {
                 this.dispose();
                 new DifficultySelection(username);
-            } else if(!usernameComboBox.getActionCommand().isEmpty()) {
-                username = (String) usernameComboBox.getEditor().getItem(); 
+            } else {
                 Account account = new Account();
                 account.setUsername(username);
                 accountRepository.save(account);
Index: out/production/ScrumbleWords/database/account_database.sql
===================================================================
diff --git a/out/production/ScrumbleWords/database/account_database.sql b/out/production/ScrumbleWords/database/account_database.sql
deleted file mode 100644
--- a/out/production/ScrumbleWords/database/account_database.sql	
+++ /dev/null	
@@ -1,18 +0,0 @@
-
--- database for whole game.
-create database word_scramble;
-use word_scramble;
-
-
--- table to store users information
-create table user_account(
-    id int(100) auto_increment,
-    username varchar(100) unique, 
-    primary key(id));
-
-
--- In addition to that, we will have this two tables 
-    -- table to store words prepared for game, and
-    -- table to store users progress in a game that linked to their account.
-
-    
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b150dd97-e7b2-4430-ab8d-e32e7b91c0d4\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ScrumbleWords/database/account_database.sql\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/ScrumbleWords/database/account_database.sql\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/database/account_database.sql\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/database/account_database.sql\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/frames/Home.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/frames/Home.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/frames/Registration.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/frames/WeightSelection.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/frames/WeightSelection.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/module/Account.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/repository/AccountRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/repository/AccountRepository.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2K27DYeSxXRKhewHdns3fsAGKLJ\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"showMembers\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\"\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"App\" />\r\n      <module name=\"ScrumbleWords\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"permu\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"repository.permu\" />\r\n      <module name=\"ScrumbleWords\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"repository.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.App\" />\r\n        <item itemvalue=\"Application.permu\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b150dd97-e7b2-4430-ab8d-e32e7b91c0d4\" name=\"Changes\" comment=\"\" />\r\n      <created>1673160708313</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1673160708313</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,13 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b150dd97-e7b2-4430-ab8d-e32e7b91c0d4" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ScrumbleWords/database/account_database.sql" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/ScrumbleWords/database/account_database.sql" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/database/account_database.sql" beforeDir="false" afterPath="$PROJECT_DIR$/src/database/account_database.sql" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ScrumbleWords.iml" beforeDir="false" afterPath="$PROJECT_DIR$/ScrumbleWords.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/ScrumbleWords/database/account_database.sql" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/database/dumps/Dump20230120/word_scrumble_user_account.sql" beforeDir="false" afterPath="$PROJECT_DIR$/src/database/dumps/Dump20230120/word_scrumble_user_account.sql" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/database/dumps/Dump20230120/word_scrumble_words.sql" beforeDir="false" afterPath="$PROJECT_DIR$/src/database/dumps/Dump20230120/word_scrumble_words.sql" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/frames/DifficultySelection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/frames/DifficultySelection.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/frames/Home.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/frames/Home.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/frames/Registration.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/frames/WeightSelection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/frames/WeightSelection.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/module/Account.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/repository/AccountRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/repository/AccountRepository.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -27,6 +29,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="main" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="MarkdownSettingsMigration">
@@ -38,29 +45,21 @@
     <option name="showLibraryContents" value="true" />
     <option name="showMembers" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/user/Downloads/mysql-connector-j-8.0.32/mysql-connector-j-8.0.32.jar&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;
   }
 }</component>
   <component name="RunManager">
     <configuration name="App" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="App" />
       <module name="ScrumbleWords" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="permu" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="repository.permu" />
-      <module name="ScrumbleWords" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="repository.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -68,7 +67,6 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.App" />
-        <item itemvalue="Application.permu" />
       </list>
     </recent_temporary>
   </component>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: ScrumbleWords.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"mysql-connector-j-8.0\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ScrumbleWords.iml b/ScrumbleWords.iml
--- a/ScrumbleWords.iml	
+++ b/ScrumbleWords.iml	
@@ -7,6 +7,23 @@
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="mysql-connector-j-8.0" level="project" />
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$USER_HOME$/Downloads/flatlaf-3.0.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$USER_HOME$/Downloads/mysql-connector-j-8.0.32/mysql-connector-j-8.0.32.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
   </component>
 </module>
\ No newline at end of file
Index: src/repository/AccountRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package repository;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\n\r\nimport models.Account;\r\n\r\npublic class AccountRepository {\r\n\r\n    String jdbcUrl = \"jdbc:mysql://localhost:3306/word_scrumble\";\r\n    String dbUserName = \"root\";\r\n    String dbPassword = \"root\";\r\n\r\n    public void save(Account account) {\r\n\r\n        try {\r\n            Connection con = DriverManager.getConnection(jdbcUrl, dbUserName, dbPassword);\r\n            String query = \"INSERT INTO user_account VALUES(?,?)\";\r\n\r\n            PreparedStatement myStmt = con.prepareStatement(query);\r\n            myStmt.setInt(1, 0);  // id is auto-increment\r\n            myStmt.setString(2, account.getUsername());\r\n            myStmt.executeUpdate();\r\n            con.close();\r\n        } catch (Exception ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public ArrayList<String> getUsername() {\r\n        ArrayList<String> users = new ArrayList<>();\r\n\r\n        try {\r\n            Connection con = DriverManager.getConnection(jdbcUrl, dbUserName, dbPassword);\r\n\r\n            ResultSet rs = con.createStatement().executeQuery(\"SELECT * FROM user_account\");\r\n\r\n            while (rs.next()) {\r\n                String username = rs.getString(\"username\");\r\n                users.add(username);\r\n            }\r\n            con.close();\r\n        } catch (Exception ex) {\r\n            ex.printStackTrace();\r\n        }\r\n        return users;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/repository/AccountRepository.java b/src/repository/AccountRepository.java
--- a/src/repository/AccountRepository.java	
+++ b/src/repository/AccountRepository.java	
@@ -7,7 +7,7 @@
 
 public class AccountRepository {
 
-    String jdbcUrl = "jdbc:mysql://localhost:3306/word_scrumble";
+    String jdbcUrl = "jdbc:mysql://localhost:3306/word_scramble";
     String dbUserName = "root";
     String dbPassword = "root";
 
